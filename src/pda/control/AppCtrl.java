/* 
 *  PDA project -- UBS/IUT de Vannes -- Dept Informatique
 *
 *  $Id$
 *
 *  Copyright 2007-08 © IUT de Vannes
 *  Ce logiciel pédagogique est diffusé sous licence GPL
 */
package pda.control;

import pda.datas.*;
import pda.view.*;

import javax.swing.*;

import datas.NoPhotoFoundException;
import datas.Selection;

import java.awt.BorderLayout;
import java.awt.event.*;
import java.util.GregorianCalendar;

/**
 *  The simplest application in the PDA.
 *
 *  It can be used to construct other applications.
 *
 *  @author F. Merciol, D. Deveaux MAJ J-F. Kamp
 *                      <{francois.merciol|daniel.deveaux}@univ-ubs.fr>
 *  @version $Revision: 27 $
 */
public class AppCtrl implements IApplication, ActionListener {

	/*
     	 * Private implementation -------------------------------------------------
     	 */
    
    	/** the name of the application */
    	private String name;
    
    	/** the view of the application */
    	private AppView view;
    
    	/** the engine of the application */
    	private AppDatas engine;

    	/*
     	 *  Public ressources -----------------------------------------------------
     	 *
     	 *  Constructors
     	 */

    	/**
     	 * Initialize the datas and ihm of App application.
     	 */
    	public AppCtrl () {

        	engine = new AppDatas();
        	view = new AppView (this, engine );
    	} // --------------------------------------------------------- AppCtrl()

    	/*
     	 *  Public methods
     	 */
    
    	/*
     	 * See documentation of interface
     	 */
    	public void start ( PdaCtrl pda ) {
        	System.out.println ( "Start of App application" );
    	} // -------------------------------------------------------------- start()

    	/*
     	 * See documentation of interface
     	 */
    	public String getAppliName() {
		return name;
    	} // ---------------------------------------------------------- getAppliName()

    	/*
     	 * See documentation of interface
     	 */
    	public JPanel getAppliPanel() {
		return view.getPanel();
    	} // ---------------------------------------------------------- getAppliPanel()

    	/*
     	 * See documentation of interface
     	 */
    	public boolean close() {
		return true;
    	} // ---------------------------------------------------------- close()

	/*
	 * See documentation of interface
	 */
	public void setAppliName ( String theName ) {
		this.name = theName;
	} // ---------------------------------------------------------- setAppliName()

    	/**
     	 * Callback method, reaction to button pushed
	 * @param e the captured event
     	 */
    	public void actionPerformed ( ActionEvent e ) {

		// Write here reactions to Events generated by App application
    	
    	   		
    		
    	JButton source =new JButton();
    	if(e.getSource().getClass() == source.getClass()){
    			source = (JButton)e.getSource();
    	}
    	
    	if(source.getActionCommand() == "Bouton Galerie"){
    		if(this.engine.getUtilisateurSelect()==null){
    			this.view.afficherGalerie(AppDatas.getTabcol());
    		}
    		else{
    			this.view.afficherGalerie(this.engine.getUtilisateurSelect().getAllPhotos());
    		}
    	}
    	//-------------------------------------------------------------
    	else if(source.getActionCommand() == "Bouton Recherche"){
    		this.view.afficherRecherche();
    	}
    	//-------------------------------------------------------------
    	else if(source.getActionCommand() == "Bouton Options"){
    		this.view.afficherOptions();
    	}
    	//-------------------------------------------------------------
    	else if(source.getActionCommand() == "Bouton Gestion"){
    		this.view.afficherGestion();
    	}
    	//-------------------------------------------------------------
    	else if(source.getActionCommand() == "Bouton Edition"){
    		this.view.afficherEdition();
    	}
    	//-------------------------------------------------------------
    	else if(source.getActionCommand() == "Bouton Diaporama"){
    		if(this.engine.getUtilisateurSelect() == null){
    			try {
    				this.view.afficherDiaporama(this.engine.getColprinc().getPhotoSelect());
    			} catch (NoPhotoFoundException e1) {
    				e1.printStackTrace();
    			}
    		}
    		else{
    			try {
    				this.view.afficherDiaporama(this.engine.getUtilisateurSelect().getAllPhotos().getPhotoSelect());
    			} catch (NoPhotoFoundException e1) {
    				e1.printStackTrace();
    			}
    		}
    	}
    	//-------------------------------------------------------------
    	else if(source.getActionCommand() == "Bouton Accueil"){
    		this.view.afficherMenu();
    	}
    	//-------------------------------------------------------------
    	else if(source.getActionCommand() == "Faire Recherche"){
    		System.out.println("Bouton de recherche");
    		String[] titre = this.view.getTexteTitre().getText().split(";");
    		String categorie = this.view.getComboCat().getItemAt(this.view.getComboCat().getSelectedIndex());
    		String[] auteur = this.view.getTexteAuteur().getText().split(";");
    		int jour1 =-1;
    		if(this.view.getComboJour().getItemAt(this.view.getComboJour().getSelectedIndex()).equals("-") == false){
    			jour1 = Integer.parseInt(this.view.getComboJour().getItemAt(this.view.getComboJour().getSelectedIndex()));
    		}
    		int jour2 = -1;
    		if(this.view.getComboJour2().getItemAt(this.view.getComboJour2().getSelectedIndex()).equals("-") == false){
    			jour2 = Integer.parseInt(this.view.getComboJour2().getItemAt(this.view.getComboJour2().getSelectedIndex()));
    		}
    		int mois1 = this.view.getComboMois().getSelectedIndex() - 1;
    		int mois2 = this.view.getComboMois2().getSelectedIndex() -1;
    		int annee1 = -1;
    		if(this.view.getComboAnnee().getItemAt(this.view.getComboAnnee().getSelectedIndex()).equals("-") == false){
    			annee1 = Integer.parseInt(this.view.getComboAnnee().getItemAt(this.view.getComboAnnee().getSelectedIndex()));
    		}
    		int annee2 = -1;
    		if(this.view.getComboAnnee2().getItemAt(this.view.getComboAnnee2().getSelectedIndex()).equals("-") == false){
    			annee2 = Integer.parseInt(this.view.getComboAnnee2().getItemAt(this.view.getComboAnnee2().getSelectedIndex()));
    		}
    		
    		String[] localisation = this.view.getTextePays().getText().split(";");
    		String[] motsCles = this.view.getTexteMots().getText().split(";");
    	
    		System.out.println(titre[0]+categorie+auteur+jour1+jour2+mois1+mois2+annee1+annee2+localisation+motsCles[0]);
    	
    		Selection laSelection;
    		if(this.engine.getUtilisateurSelect()==null){
    			laSelection = new Selection(this.engine.getColprinc());
    		}
    		else{
    			laSelection = new Selection(this.engine.getUtilisateurSelect().getCollection(categorie));
    		}
    		laSelection.setAuteur(auteur);
    		laSelection.setKeyWords(motsCles);
    		laSelection.setPays(localisation);
    		laSelection.setTitre(titre);
    		laSelection.setDateDebut(new GregorianCalendar(annee1,mois1,jour1));
    		laSelection.setDateFin(new GregorianCalendar(annee2,mois2,jour2));
    		
    		this.view.afficherGalerie(laSelection.rechercher());
    	}
    	//-------------------------------------------------------------
    	else if(source.getActionCommand() == "Back"){
    		System.out.println("Bouton Back");
    		System.out.println(this.view.getPanelPrecedent().getName());
    		System.out.println(this.view.getPanelCourant().getName());
    		this.view.getPanel().removeAll();
    		this.view.getPanel().add(this.view.getPanelPrecedent(),BorderLayout.CENTER);
    		this.view.getPanel().repaint();
    	}
    	//-------------------------------------------------------------
    	else if(source.getActionCommand() == "OK Tri"){
    		System.out.println("Bouton OK Tri");
    		String tri = this.view.getComboGalerie().getItemAt(this.view.getComboGalerie().getSelectedIndex());
    		
    		if (tri.equals("Categorie Alphabetique")){
    			System.out.println("Categorie Alphabetique");
    		}
    		else if(tri.equals("Categorie Non Alphabetique")){
    			System.out.println("Categorie Non Alphabetique");
    		}
    		else if(tri.equals("Auteur Alphabetique")){
    			System.out.println("Auteur Alphabetique");
    			if(this.engine.getUtilisateurSelect()==null){
    				this.engine.getColprinc().setTriAuteurAlpha();
    				this.view.afficherGalerie(this.engine.getColprinc());
    			}
        		else{
        			this.engine.getUtilisateurSelect().getAllPhotos().setTriAuteurAlpha();
        			this.view.afficherGalerie(this.engine.getUtilisateurSelect().getAllPhotos());
        		}
    			
    			
    		}
    		else if(tri.equals("Auteur Non Alphabetique")){
    			System.out.println("Auteur Non Alphabetique");
    			if(this.engine.getUtilisateurSelect()==null){
            		this.engine.getColprinc().setTriAuteurAntiAlpha();
    			this.view.afficherGalerie(this.engine.getColprinc());
    			}
        		else{
        			this.engine.getUtilisateurSelect().getAllPhotos().setTriAuteurAntiAlpha();
        			this.view.afficherGalerie(this.engine.getUtilisateurSelect().getAllPhotos());
        		}
    			

    		}
    		else if(tri.equals("Date Croissante")){
    			System.out.println("Date Croissante");
    			if(this.engine.getUtilisateurSelect()==null){
            		this.engine.getColprinc().setTriDateCroissante();
    			this.view.afficherGalerie(this.engine.getColprinc());
    			}
        		else{
        			this.engine.getUtilisateurSelect().getAllPhotos().setTriDateCroissante();
        			this.view.afficherGalerie(this.engine.getUtilisateurSelect().getAllPhotos());
        		}
    			
    		}
    		else if(tri.equals("Date Decroissante")){
    			System.out.println("Date Decroissante");
    			if(this.engine.getUtilisateurSelect()==null){
            		this.engine.getColprinc().setTriDateDecroissante();
    			this.view.afficherGalerie(this.engine.getColprinc());
    			}
        		else{
        			this.engine.getUtilisateurSelect().getAllPhotos().setTriDateDecroissante();
        			this.view.afficherGalerie(this.engine.getUtilisateurSelect().getAllPhotos());
        		}
    			
    		}
    		else if(tri.equals("Pays Alphabetique")){
    			System.out.println("Pays Alphabetique");
    			if(this.engine.getUtilisateurSelect()==null){
            		this.engine.getColprinc().setTriPaysAlpha();
    			this.view.afficherGalerie(this.engine.getColprinc());
    			}
        		else{
        			this.engine.getUtilisateurSelect().getAllPhotos().setTriPaysAlpha();
        			this.view.afficherGalerie(this.engine.getUtilisateurSelect().getAllPhotos());
        		}
    			
    		}
    		else if(tri.equals("Pays Non Alphabetique")){
    			System.out.println("Pays Non Alphabetique");
    			if(this.engine.getUtilisateurSelect()==null){
            		this.engine.getColprinc().setTriPaysAntiAlpha();
    			this.view.afficherGalerie(this.engine.getColprinc());
    			}
        		else{
        			this.engine.getUtilisateurSelect().getAllPhotos().setTriPaysAntiAlpha();
        			this.view.afficherGalerie(this.engine.getUtilisateurSelect().getAllPhotos());
        		}
    			
    		}
    		else if(tri.equals("Titre Alphabetique")){
    			System.out.println("Titre Alphabetique");
    			if(this.engine.getUtilisateurSelect()==null){
            		this.engine.getColprinc().setTriTitreAlpha();
    			this.view.afficherGalerie(this.engine.getColprinc());
    			}
        		else{
        			this.engine.getUtilisateurSelect().getAllPhotos().setTriTitreAlpha();
        			this.view.afficherGalerie(this.engine.getUtilisateurSelect().getAllPhotos());
        		}
    			
    		}
    		else if(tri.equals("Titre Non Alphabetique")){
    			System.out.println("Titre Non Alphabetique");
    			
    			if(this.engine.getUtilisateurSelect()==null){
            		this.engine.getColprinc().setTriTitreAntiAlpha();
    			this.view.afficherGalerie(this.engine.getColprinc());
    			}
        		else{
        			this.engine.getUtilisateurSelect().getAllPhotos().setTriTitreAntiAlpha();
        			this.view.afficherGalerie(this.engine.getUtilisateurSelect().getAllPhotos());
        		}
    			
    		}
    	}
    	//-------------------------------------------------------------
    	else if(source.getActionCommand() == "Bouton Gestion Selection"){
    		this.view.afficherGestionSelection();
    	}
    	//-------------------------------------------------------------
    	else if(source.getActionCommand() == "Changer Theme"){
    		this.engine.setTheme(this.view.getComboTheme().getItemAt(this.view.getComboTheme().getSelectedIndex()));
    	}
    	//-------------------------------------------------------------
    	else if(source.getActionCommand() == "Defaut Theme"){
    		this.engine.setTheme("Defaut");
    	}
    	//-------------------------------------------------------------
    	else if(source.getActionCommand() == "Ajouter Selection"){
    		System.out.println("Bouton ajouter selection");
    	}
    	//-------------------------------------------------------------
    	else if(source.getActionCommand() == "Aide"){
    		this.view.afficherAide();
    	}
    	//-------------------------------------------------------------
    	else if(source.getActionCommand() == "A Propos"){
    		this.view.afficherAPropos();
    	}
    	//-------------------------------------------------------------
    	else if(source.getActionCommand() == "Ajouter Photo"){
    		System.out.println("Bouton Ajouter Photo");
    	}
    	//-------------------------------------------------------------
    	else if(source.getActionCommand() == "Ajouter Categorie"){
    		System.out.println("Bouton Ajouter Categorie");
    	}
    	//-------------------------------------------------------------
    	else if(source.getActionCommand() == "Supprimer Categorie"){
    		System.out.println("Bouton Supprimer Categorie");
    	}
    	//-------------------------------------------------------------
    	else if(source.getActionCommand() == "Supprimer Selection"){
    		System.out.println("Bouton Supprimer Selection");
    	}
    	//-------------------------------------------------------------
    	else if(source.getActionCommand() == "Ajouter Recherche"){
    		System.out.println("Bouton Ajouter Recherche");
    	}
    	//-------------------------------------------------------------
    	else if(source.getActionCommand() == "Edit Selection"){
    		System.out.println("Bouton Edition Selection");
    	}
    	//-------------------------------------------------------------
    	else if(source.getActionCommand() == "Se Connecter"){
    		this.engine.setUtilisateurSelect(this.engine.getListeUsers()[this.view.getComboUsers().getSelectedIndex()]);
    	}
    	//-------------------------------------------------------------
    	else if(source.getActionCommand() == "Se Deconnecter"){
    		this.engine.setUtilisateurSelect(null);
    	}
    	//-------------------------------------------------------------
    	else if(source.getActionCommand().substring(0, 5).equals("Image")){
    		try {
				this.engine.getColprinc().setIndexSelect(source.getActionCommand().substring(5));
			} catch (NoPhotoFoundException e2) {
				e2.printStackTrace();
			}
    		try {
    			if(this.engine.getUtilisateurSelect()==null){
    				this.view.afficherDiaporama(this.engine.getColprinc().getPhotoSelect());
    			}
        		else{
        			this.view.afficherDiaporama(this.engine.getUtilisateurSelect().getAllPhotos().getPhotoSelect());
        		}
				
			} catch (NoPhotoFoundException e1) {
				e1.printStackTrace();
			}
    	}
    	//-------------------------------------------------------------
    	else if(source.getActionCommand() == "Bouton Previous"){
    		try {
    			if(this.engine.getUtilisateurSelect()==null){
    				this.engine.getColprinc().prevPhoto();
    				this.view.afficherDiaporama(this.engine.getColprinc().getPhotoSelect());
        		}
        		else{
        			this.engine.getUtilisateurSelect().getAllPhotos().prevPhoto();
        			this.view.afficherDiaporama(this.engine.getUtilisateurSelect().getAllPhotos().getPhotoSelect());
        		}
    			
			} catch (NoPhotoFoundException e1) {
				e1.printStackTrace();
			}
    	}
    	//-------------------------------------------------------------
    	else if(source.getActionCommand() == "Bouton Next"){
    		try {
    			if(this.engine.getUtilisateurSelect()==null){
    				this.engine.getColprinc().nextPhoto();
    				this.view.afficherDiaporama(this.engine.getColprinc().getPhotoSelect());
        		}
        		else{
        			this.engine.getUtilisateurSelect().getAllPhotos().nextPhoto();
        			this.view.afficherDiaporama(this.engine.getUtilisateurSelect().getAllPhotos().getPhotoSelect());
        		}
			} catch (NoPhotoFoundException e1) {
				e1.printStackTrace();
			}
    	}
    	//-------------------------------------------------------------
    	else if(source.getActionCommand() == "Bouton Play Pause"){
    		if(this.view.getPlaypause().getText().equals("Pause")){
    			this.view.getPlaypause().setText("Play");
    			this.view.lireDiaporama();
    		}
    		else{
    			this.view.getPlaypause().setText("Pause");
    		}
    	}
	} // ---------------------------------------------------------- actionPerformed()

		

} // ---------------------------------------------------------- Class AppCtrl
